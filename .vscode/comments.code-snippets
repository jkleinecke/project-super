{
	// Place your project-super workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"TODO Comment": {
		"scope": "c,cpp,csharp,javascript,typescript",
		"prefix": "todo",
		"body": "// TODO(james): ${1:reminder}",
		"description": "Create a todo comment"
	},
	"NOTE Comment": {
		"scope": "c,cpp,csharp,javascript,typescript",
		"prefix": "note",
		"body": "// NOTE(james): ${1: message}",
		"description": "Create a note comment"
	},
	"Block Comment": {
		"scope": "c,cpp,csharp,javascript,typescript",
		"prefix": "block",
		"body": [
			"/*******************************************************************************",
			"",
			"\t${1:Comment Block}",
			"",
			"********************************************************************************/"
		]
	},
	"Attention Block Comment": {
		"scope": "c,cpp,csharp,javascript,typescript",
		"prefix": "atn",
		"body": [
			"/*****************************  ATTENTION!  ************************************",
			"",
			"\t${1:Comment Block}",
			"",
			"********************************************************************************/"
		]
	},
	"LOG Debug": {
		"scope": "c,cpp",
		"prefix": "ldbg",
		"body": "LOG_DEBUG(\"$1\");",
		"description": "Log debug message"
	},
	"LOG Information": {
		"scope": "c,cpp",
		"prefix": "linfo",
		"body": "LOG_INFO(\"$1\");",
		"description": "Log info message"
	},
	"LOG Warning": {
		"scope": "c,cpp",
		"prefix": "lwarn",
		"body": "LOG_WARN(\"$1\");",
		"description": "Log warning message"
	},
	"LOG Error": {
		"scope": "c,cpp",
		"prefix": "lerr",
		"body": "LOG_ERROR(\"$1\");",
		"description": "Log error message"
	}
}